@import 'reset';
@import 'fontello';

// @import url('https://fonts.googleapis.com/css?family=Lato:100,200,300,400,500,600,700,800&display=swap');

$font-stack: -apple-system, BlinkMacSystemFont, 'San Francisco', 'Helvetica Neue', Helvetica, Arial, sans-serif;

$margin: 20px 15px 15px 16px;

$dimmed-color: #99a;
// $link: #7b68ee; // Умеренный аспидно-синий
$hover: #ff6800; // Яркий оранжевый

:root {
  --text-color: #556;
  --back-color: rgb(255, 255, 255, 0.7);
  --link-color: #7b68ee;
  --hr-color: #ddd;
  --map-bgcolor: #F8F5EE;
}

@media (prefers-dark-interface), (prefers-color-scheme: dark) {
  :root {
    --text-color: white;
    --back-color: rgba(0, 0, 0, 0.7);
    --link-color: rgb(102, 187, 255);
    --hr-color: #666;
    --map-bgcolor: #2B2D2F;
  }
}

* {
  -webkit-font-smoothing: subpixel-antialiased;
}

html {
  background-color: var(--back-color);
}

html, body, {
  box-shadow: none;
  color: var(--text-color);
  font: 1rem/150% $font-stack;
  padding: 0px;
  margin: 0px;
  width: 100%;
  height: 100%;

  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;

  text-rendering: optimizeLegibility;
}

.container {
  display: -webkit-flex;
  display: flex;
  height: 100%;
  width: 100%;
  // flex-direction: row;
}

nav {
  overflow: scroll;
  background-color: var(--back-color);

  box-shadow: 0 -0 0px 1px rgba(0, 0, 0, 0.1);

  border-radius: 11px;

  overflow-y: auto;

  // position: absolute;
  // left: 0;
  // top: 0;
  // right: 0;
  // bottom: 0;

  height: 100%;
}

span.travel-map {
  &:after {
    content: " →"
  }
}

.nav-wrapper {
  // background:transparent url('/images/trans.png') repeat center top;

  padding: 9px;

  overflow-y: hidden;


  // width: 45%;
  max-width: 400px;
  min-width: 300px;
  height: 100%;

  // position: absolute;
  // left: 0;
  // top: 0;
  // right: 0;
  // bottom: 0;


  // overflow: auto;
  padding-bottom: 15px;

  z-index: 100;
  position: relative;
  // -webkit-flex: 2;
  //         flex: 2;

          // box-sizing: border-box;
}

@supports(padding: unquote('max(0px)')) {
  .nav-wrapper {
    padding-left:  unquote('max(9px, env(safe-area-inset-left, 9px))');
    margin-bottom: m#{a}x(20px, env(safe-area-inset-bottom, 20px));
  }
}

@supports ((-webkit-backdrop-filter: initial) or (backdrop-filter: initial)) {
  nav {
    -webkit-backdrop-filter: saturate(180%) blur(20px);
    -moz-backdrop-filter: saturate(180%) blur(20px);
    backdrop-filter: saturate(180%) blur(20px);
    background-color: var(--back-color);
  }
}


.map-wrapper {
  // flex-grow: 1;
  // position: relative;

  background-color: var(--map-bgcolor);

  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;

}

.map {
  // -webkit-flex: 5;
  //         flex: 5;

  display: block;

  // height: 100%;
  // width: 100%;

  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.circle-annotation { // map
  width: 15px;
  height: 15px;
  border-radius: 50%;
  // border: 2px solid #000;
  box-shadow: 0 -0 0px 1px rgba(0, 0, 0, 0.1);
  color: #FFF;
  background-color: #c969e0;
  text-align: center;
  line-height: 32px;
  transition: 0.3s;

  &:hover {
    background-color: $hover !important;
    transition: 0.05s;
  }
}

.gm-style {
  bottom: -30px;
  height: auto !important;
}

h1 {
  font-size: 30px;
  font-weight: bold;
  margin: $margin;
  margin-top: 20px;

  img {
    margin-left: 5px;
    // bottom: -5px;
    width: 50px;
    border-radius: 50%;
    border: 1px solid var(--hr-color);
    vertical-align: -50%;
  }
}

h2 {
  font-weight: bold;
  margin: $margin;
  margin-top: 0px;
}

space {
  display: block;
  margin: 18px;
}

hr {
  border: 1px solid var(--hr-color);
  border-width: 1px 0 0 0;
  margin: $margin;
}

strong, b {
  font-weight: 600;
}

p {
  margin: $margin;
  margin-top: 0;

  .splitter {
    display: inline;
    color: $dimmed-color;
    padding: 20px 0px;
    margin: 0 7px;

    &:before {
      content: '\2022'; /* Unicode bullet symbol • */
      font-size: 12px;
      line-height: 0;
      position: relative;
      top: -1px;
      left: 1px;
    }
  }

  &.app {
    margin-bottom: 20px;

    strong {
      a {
        color: inherit;
        &:hover, &.hover {
          color: $hover;
          text-decoration: none;
        }
      }
    }

    /* if .splitter is right after the .call-to-action, reduce left-space */
    .call-to-action + .splitter {
      margin-left: 0;
      padding-left: 0;
      &:before {
        position: relative;
        left: 0;
      }
    }
  }

  &.last {
    // margin-bottom: 3px;
  }

  &.donate a {
    letter-spacing: 0.1em;
    font-size: 13px;
  }
}

.soon {
  color: $dimmed-color !important;
  font-style: italic;
  pointer-events: none;
}

ul {
  margin: $margin;
  margin-top: 0;

  li {
    margin-left: 20px;
    padding: 5px 0 0 0;
    list-style-type: none;
    &:before {
      color: $dimmed-color;
      content: '\2022'; /* Unicode bullet symbol */
      margin-left: -12px;
      padding-right: 0.5em;
    }
  }
}

ul.menu {
  li {
    display: inline-block;
    margin-left: 0;
    margin-right: 0;
    &:before {
      content: none;
    }
    &:after {
      color: $dimmed-color;
      content: '\2022'; /* Unicode bullet symbol */
      font-size: 12px;
      line-height: 0;
      position: relative;
      top: -1px;
      padding-right: 10px;
      left: 5px;
    }
    &:last-child {
      &:after {
        content: none;
      }
    }
  }
}

.stars {
  color: #daa520; // gold;
  display: inline-block;
  font-size: 11px;
  letter-spacing: 0.4em;
  position: relative;
  top: -6px;
  line-height: 0;

  star {
    display: inline-block;
    transform: rotate(20deg);
    &:before {
      content: "★";
    }
  }
}

.nbsp {
  white-space: nowrap;

  /* .nbsp right after <strong> (in case of "for Telegram") */
  strong + & {
    color: $dimmed-color;
  }
}

span.now {
  // fixes
  display: inline;
  position: relative;
  top: -8px;
  padding: 0 7px;
  line-height: 0;

  // design
  color: $hover;
  font-size: 10px;
  font-weight: bold;
  letter-spacing: .2em;
  text-transform: uppercase;
}


.links { /* social icon-links */
  font-size: 18px;
  word-spacing: 0;

  margin-left: 3px; /* noble left padding */
  overflow-x: hidden;
  overflow-y: hidden;
  height: 25px;

  i {
    display: inline-block;
  }

  i.icon-paper-plane {
    font-size: 16px;
  }

  a {
    padding: 10px;
    color: $dimmed-color;

    &.disabled {
      opacity: 0.25;
      cursor: default;

      margin: 8px 3px;
      padding: 2px 2px;

      background-color: transparent;
      background: linear-gradient(-45deg, rgba(0,0,0,0) 44%, $dimmed-color 47%, rgba(0,0,0,0) 50%);

      &:hover {
        color: $dimmed-color;
      }
    }
  }
}

li.globe {
  /* https://en.wikipedia.org/wiki/Axial_tilt */
  transform: rotate(23.43674deg);
}

/* global `a` config */
a {
  color: var(--link-color);
  text-decoration: none;
  transition: 0.3s;

  &.globe {
    display: inline-block;

    &:hover {
      text-decoration: none;
      animation: heartBeat 1s linear infinite;
    }
  }

  &:hover, .hover {
    color: $hover; // ff2d55
    transition: 0s;
  }

  &.call-to-action {
    display: inline-block;

    border-radius: 12px;
    padding: 0px 9px 2px 9px;
    margin-left: -9px;

    &.hover {
      color: $hover;
      box-shadow: inset 1px 0 $hover, inset 0 1px $hover, inset -1px 0 $hover, inset 0 -1px $hover;

      &.imessage {
        box-shadow: none;
      }
    }

    &:hover {
      background-color: $hover;
      color: white;
      text-decoration: none;

      -webkit-background-clip: padding; /* for Safari */
      background-clip: padding-box; /* for IE9+, Firefox 4+, Opera, Chrome */

      &.imessage {
        background-color: #3484F7;
      }
    }
  }
}




@media only screen
and (max-width: 767px)
and (orientation : portrait) {
  .container {
    display: flex;
    flex-direction: column;
  }
  .nav-wrapper {
    max-width: 100%;
    min-width: 250px;
  }
  nav {
    margin-top: 53vh;
    position: relative;

    min-width: 100%;
    max-width: 100%;
    min-height: 100%;
    width: 100%;
  }
  span.travel-map {&:after {
    content: " ↑"
  }}
  .map-wrapper {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: 100%;
  }
}





/* make keyframes that tell the start state and the end state of our object */
@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
   @-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
        @keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation: fadeIn ease-out 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
     -moz-animation: fadeIn ease-out 1;
          animation: fadeIn ease-out 1;

  -webkit-animation-fill-mode: forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
     -moz-animation-fill-mode: forwards;
          animation-fill-mode: forwards;

  -webkit-animation-duration: 0.7s;
     -moz-animation-duration: 0.7s;
          animation-duration: 0.7s;
}

.fade-in.one {
  -webkit-animation-delay: 0.1s;
     -moz-animation-delay: 0.1s;
          animation-delay: 0.1s;
}

.fade-in.two {
  -webkit-animation-delay: 1.0s;
     -moz-animation-delay: 1.0s;
          animation-delay: 1.0s;
}

.fade-in.three {
  -webkit-animation-delay: 1.5s;
     -moz-animation-delay: 1.5s;
          animation-delay: 1.5s;
}

@keyframes heartBeat {
  0% {
    transform: scale(1);
  }

  14% {
    transform: scale(1.5);
  }

  28% {
    transform: scale(1);
  }

  42% {
    transform: scale(1.5);
  }

  70% {
    transform: scale(1);
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale3d(0.1, 0.1, 0.1);
  }

  50% {
    opacity: 1;
    transform: scale3d(1.5, 1.5, 1.5);
  }
}

@keyframes bounceIn {
  from,
  20%,
  40%,
  60%,
  80%,
  to {
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  0% {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(0.9, 0.9, 0.9);
  }

  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(0.97, 0.97, 0.97);
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}
