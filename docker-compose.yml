version: "3.7"
services:

  website:
    build: .
    restart: always
    labels: 
      - "traefik.enable=true"
      
      - "traefik.http.routers.website.entrypoints=http"
      - "traefik.http.routers.website.rule=Host(`m4rr.ru`,`saytakov.com`)"
      # - "traefik.http.routers.website.service=website-m4rr-ru-static@docker" # <== Enabling the api to be a service to acce$
    networks: 
      - traefik
    # ports:
      # - "3000:80"
    # environment: # &environment
      # - VIRTUAL_HOST=m4rr.ru,saytakov.com
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx:rw
      # - ./public:/usr/share/nginx/html:ro

  traefik:
    image: traefik:chevrotin
    restart: always
    command: 
      - --api.debug=true
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --log.level=DEBUG
      
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      # - --providers.file.filename=/dynamic.yaml
      
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443

      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log
    labels: 
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to$
      - "traefik.http.routers.api.rule=Host(`mon.m4rr.ru`)" # <== Setting the domain for the d$
      # - "traefik.http.routers.api.service=api@internal" # <== Enabling the api to be a service to acce$
    volumes: 
      - ./data/traefik:/var/log/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./dynamic.yaml:/dynamic.yaml
    networks: 
      - traefik
    ports: 
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
      
networks: 
  traefik:
    external: 
      name: traefik
